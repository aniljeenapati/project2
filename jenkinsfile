pipeline {
    agent any
    environment {
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-sa')
        ANSIBLE_CONFIG = '/var/lib/jenkins/workspace/loadbalancer/ansible.cfg'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/aniljeenapati/project2.git'
            }
        }
        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Apply') {
            steps {
                withCredentials([file(credentialsId: 'gcp-sa', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    sh 'terraform apply -auto-approve'
                }
            }
        }
        stage('Wait for VM to be ready') {
            steps {
                sleep(time: 30, unit: "SECONDS")
            }
        }

/*
        stage('Generate and Update Ansible Inventory') {
            steps {
                script {
                    def vmIpJson = sh(script: "terraform output -json vm_ips", returnStdout: true).trim()
                    def vmIps = readJSON text: vmIpJson

                    // Start building the inventory file content
                    def inventoryContent = """
                    all:
                      children:
                        web:
                          hosts:
                    """

            // Append each IP to the inventory content
                    vmIps.eachWithIndex { ip, index ->
                        inventoryContent += """
                              web_ansible-${index + 1}:
                                ansible_host: ${ip}
                                ansible_user: centos
                                ansible_ssh_private_key_file: /var/lib/jenkins/.ssh/id_rsa
                        """
                    }

            // Write inventory content to the file
                    writeFile file: '/var/lib/jenkins/workspace/loadbalancer/inventory.gcp.yml', text: inventoryContent
                }
            }
        }
*/
        stage('Install Apache using Ansible') {
            steps {
                sh 'ansible-playbook -i /var/lib/jenkins/workspace/loadbalancer/inventory.gcp.yml /var/lib/jenkins/workspace/loadbalancer/apache_install.yml'
            }
        }
        stage('Terraform Init') {
            steps {
              dir('terra') {
                sh 'terraform init'
                }
            }
        }
        stage('Load Balancer') {
            steps {
              dir('terra') {
                withCredentials([file(credentialsId: 'gcp-sa', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    sh 'terraform apply -auto-approve'
                  }
                }
            }
        }
    }
}
